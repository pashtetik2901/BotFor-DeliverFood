from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup, ReplyKeyboardMarkup, KeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder

from bot.handlers.callbacks.callbacks import (Main as MAIN_CB,
                                              Order as ORDER_CB,
                                              Cart as CART_CB)



async def main(price):
    main_menu = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text='–ú–µ–Ω—é', callback_data=MAIN_CB.main_menu)],
        [InlineKeyboardButton(text='–ö–æ—Ä–∑–∏–Ω–∞', callback_data=MAIN_CB.cart)],
    ])

    if price > 249:
        main_menu.inline_keyboard.append(
            [InlineKeyboardButton(text='–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑', callback_data=MAIN_CB.finish_order)]
        )

    main_menu.inline_keyboard.append(
        [InlineKeyboardButton(text='–°–≤—è–∑–∞—Ç—å—Å—è —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π', callback_data=MAIN_CB.contacts)]
    )

    return main_menu

async def categories(categories):
    keyboard = InlineKeyboardBuilder()
    for c in categories:
        keyboard.add(InlineKeyboardButton(text=c.name, callback_data=f'{MAIN_CB.select_category} {c.id}'))

    markup = keyboard.adjust(1).as_markup()

    markup.inline_keyboard.append([InlineKeyboardButton(text=f'–ù–∞–∑–∞–¥', callback_data=MAIN_CB.main)])

    return markup

async def dishes(dishes):
    keyboard = InlineKeyboardBuilder()
    for d in dishes:
        keyboard.add(InlineKeyboardButton(text=f'{d.name}', callback_data=f'{MAIN_CB.select_dish} {d.id}'))

    markup = keyboard.adjust(1).as_markup()

    markup.inline_keyboard.append([InlineKeyboardButton(text=f'–ù–∞–∑–∞–¥', callback_data=MAIN_CB.main_menu)])

    return markup


async def cart(price):
    markup = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text='–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å', callback_data=CART_CB.cart_edit)],
#        [InlineKeyboardButton(text='–£–±—Ä–∞—Ç—å', callback_data=CART_CB.cart_edit_delete)],
    ])

    if price > 250:
        markup.inline_keyboard.append(
            [InlineKeyboardButton(text='–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑', callback_data=MAIN_CB.finish_order)]
        )

    markup.inline_keyboard.append([InlineKeyboardButton(text=f'–ù–∞–∑–∞–¥', callback_data=MAIN_CB.main)])

    return markup

async def cart_dish_list(dishes, callback_data):
    keyboard = InlineKeyboardBuilder()
    for d in dishes:
        keyboard.add(InlineKeyboardButton(text=f'{d[0].name}', callback_data=f'{callback_data} {d[0].id}'))

    markup = keyboard.adjust(1).as_markup()

    markup.inline_keyboard.append([InlineKeyboardButton(text=f'–ù–∞–∑–∞–¥', callback_data=MAIN_CB.cart)])

    return markup

async def selected_dish(dish_count, back_callback):
    markup = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text='‚ûñ', callback_data=MAIN_CB.select_dish_decrease),
         InlineKeyboardButton(text=str(dish_count), callback_data='nothing'),
         InlineKeyboardButton(text='‚ûï', callback_data=MAIN_CB.select_dish_increase)],
        [InlineKeyboardButton(text='‚Üê', callback_data=MAIN_CB.select_dish_left),
         InlineKeyboardButton(text='‚Üí', callback_data=MAIN_CB.select_dish_right)],
        [InlineKeyboardButton(text='–ù–∞–∑–∞–¥ –∫ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—é', callback_data=back_callback)]
    ])

    return markup


start_finish_order = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text='–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å', callback_data=MAIN_CB.accept_order)],
        [InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data=MAIN_CB.main_menu)],
    ])

share_contact = ReplyKeyboardMarkup(keyboard=[
        [KeyboardButton(text='üü©üü©–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–ºüü©üü©', request_contact=True)]
    ],
    one_time_keyboard=True,
    resize_keyboard=True
    )



time_periods = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text='20', callback_data=f'{ORDER_CB.time_period} 20'),
         InlineKeyboardButton(text='30', callback_data=f'{ORDER_CB.time_period} 30')],
        [InlineKeyboardButton(text='40', callback_data=f'{ORDER_CB.time_period} 40'),
         InlineKeyboardButton(text='50', callback_data=f'{ORDER_CB.time_period} 50')],
    ])

no_commentary = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text='–ë–µ–∑ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è', callback_data=ORDER_CB.no_commentary)]
    ])


pay_method = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text='–ù–∞–ª–∏—á–Ω—ã–π', callback_data=f'{ORDER_CB.pay_method} –ù–∞–ª–∏—á–Ω—ã–π'),
         InlineKeyboardButton(text='–ë–µ–∑–Ω–∞–ª–∏—á–Ω—ã–π', callback_data=f'{ORDER_CB.pay_method} –ë–µ–∑–Ω–∞–ª–∏—á–Ω—ã–π')]
    ])

back_button = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data=MAIN_CB.main)],
])